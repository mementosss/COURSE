(BEGIN_PROG, program, 0, 0)
(VAR, var, 0, 8)
(ID, it, 0, 13)
(COLON, :, 0, 15)
(TYPE_F, !, 0, 17)
(END_DESCRIPTION, begin, 0, 19)
(SEMICOLON, ;, 0, 24)
(LINE_BREAK, , 1, 0)
(ID, it, 1, 1)
(ASSIGN, as, 1, 3)
(FLOAT, 12.5e10, 1, 7)
(SEMICOLON, ;, 1, 13)
(LINE_BREAK, , 2, 0)
(TYPE_I, %, 2, 0)
(ID, value1, 2, 3)
(ASSIGN, as, 2, 9)
(INTEGER, 1b, 2, 13)
(SEMICOLON, ;, 2, 14)
(LINE_BREAK, , 3, 0)
(TYPE_B, $, 3, 0)
(ID, executable, 3, 3)
(ASSIGN, as, 3, 13)
(TRUE, true, 3, 16)
(SEMICOLON, ;, 3, 20)
(LINE_BREAK, , 4, 0)
(TYPE_F, !, 4, 0)
(ID, value2, 4, 3)
(ASSIGN, as, 4, 9)
(FLOAT, 1.12, 4, 13)
(SEMICOLON, ;, 4, 16)
(LINE_BREAK, , 5, 0)
(TYPE_B, $, 5, 0)
(ID, value3, 5, 3)
(ASSIGN, as, 5, 9)
(TRUE, true, 5, 12)
(SEMICOLON, ;, 5, 16)
(LINE_BREAK, , 6, 0)
(IF, if, 6, 0)
(LEFT_PAREN, (, 6, 3)
(ID, value2, 6, 5)
(GREATER, GT, 6, 11)
(ID, it, 6, 15)
(RIGHT_PAREN, ), 6, 16)
(THEN, then, 6, 18)
(LEFT_PAREN, (, 6, 23)
(ID, value3, 6, 25)
(ASSIGN, as, 6, 31)
(FALSE, false, 6, 34)
(RIGHT_PAREN, ), 6, 39)
(ELSE, else, 6, 41)
(BEGIN_COMPLEX, [, 6, 46)
(ID, value1, 6, 48)
(ASSIGN, as, 6, 54)
(ERR, 13, 6, 58)
(END_COMPLEX, ], 6, 59)
(SEMICOLON, ;, 6, 60)
(LINE_BREAK, , 7, 0)
(BEGIN_COMMENT, {, 7, 0)
(LINE_BREAK, , 8, 0)
(LINE_BREAK, , 9, 0)
(END_COMMENT, }, 9, 0)
(LINE_BREAK, , 10, 0)
(READ, read, 10, 0)
(LEFT_PAREN, (, 10, 5)
(ID, value1, 10, 7)
(COMMA, ,, 10, 12)
(ID, value2, 10, 15)
(RIGHT_PAREN, ), 10, 20)
(SEMICOLON, ;, 10, 21)
(LINE_BREAK, , 11, 0)
(END_PROG, end., 11, 0)
